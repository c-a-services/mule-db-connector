<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
      xmlns:db="http://www.mulesoft.org/schema/mule/db"
      xmlns:connection-test="http://www.mulesoft.org/schema/mule/connection-test"
      xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
      http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
      http://www.mulesoft.org/schema/mule/munit-tools http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
      http://www.mulesoft.org/schema/mule/connection-test http://www.mulesoft.org/schema/mule/connection-test/current/mule-connection-test.xsd
      http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
      ">

    <munit:config name="oracle-xa-reconnection-test-case.xml" minMuleVersion="4.2.1"/>

    <munit:before-suite name="before-oracle-test-suites" description="Before suite actions">
        <connection-test:create-proxy realPort="1521" realHost="oracledb" proxyPort="${connection.lost.port}"/>
        <flow-ref name="oracle-executeDdlXA"/>
    </munit:before-suite>

    <munit:test name="oracle-insert-lost-and-recovered" ignore="#[p('oracle') == null]">

        <munit:execution>
            <flow-ref name="disconnectProxy"/>
            <logger level="INFO" message="publishing from unstable connection"/>
            <set-variable variableName="imageName" value="oracledb"/>
            <set-variable variableName="message" value="#[randomInt(1000000) as String]"/>
            <try transactionType="XA" transactionalAction="ALWAYS_BEGIN">
            <flow-ref name="oracle-executeInsertXAUnstable"/>
                <error-handler>
                    <on-error-continue logException="false" type="DB:CONNECTIVITY">
                        <logger message="Connectivity error"/>
                    </on-error-continue>
                </error-handler>
            </try>
            <flow-ref name="reconnectProxy"/>
            <try transactionType="XA" transactionalAction="ALWAYS_BEGIN">
                <flow-ref name="oracle-executeInsertXAUnstable"/>
            </try>
        </munit:execution>

        <munit:validation>
            <db:select config-ref="ORACLE_CONFIG_XA_UNSTABLE">
                <db:sql>SELECT COUNT(*) as theCount from TestDdl</db:sql>
            </db:select>
            <munit-tools:assert-equals
                    actual="#[payload.theCount[0]]"
                    expected="#[1]"
                    message="Should have one record"/>
            <flow-ref name="deleteTableOracle"/>
        </munit:validation>

    </munit:test>

    <munit:test name="oracle-connection-lost-and-eventually-recovered" ignore="#[p('oracle') == null]">

        <munit:execution>
            <flow-ref name="disconnectProxy"/>
            <async>
                <logger message="#[ import * from dw::Runtime --- '' wait 1000]"/>
                <flow-ref name="reconnectProxy"/>
            </async>
            <try transactionType="XA" transactionalAction="ALWAYS_BEGIN">
                <until-successful maxRetries="10" millisBetweenRetries="1000">
                    <logger message="Trying to insert"/>
                    <flow-ref name="oracle-executeInsertXAUnstable"/>
                </until-successful>
            </try>
        </munit:execution>

        <munit:validation>
            <db:select config-ref="ORACLE_CONFIG_XA_UNSTABLE">
                <db:sql>SELECT COUNT(*) as theCount from TestDdl</db:sql>
            </db:select>
            <munit-tools:assert-equals
                    actual="#[payload.theCount[0]]"
                    expected="#[1]"
                    message="Should have one record"/>
            <flow-ref name="deleteTableOracle"/>

        </munit:validation>

    </munit:test>

    <munit:test name="oracle-connection-lost-and-never-recover" ignore="#[p('oracle') == null]">
        <munit:behavior>
            <flow-ref name="disconnectProxy"/>
        </munit:behavior>

        <munit:execution>
            <try>
                <try transactionType="XA" transactionalAction="ALWAYS_BEGIN">
                    <until-successful maxRetries="3" millisBetweenRetries="1000">
                        <flow-ref name="oracle-executeInsertXAUnstable"/>
                    </until-successful>
                </try>
                <error-handler>
                    <on-error-continue/>
                </error-handler>
            </try>
            <flow-ref name="reconnectProxy"/>
        </munit:execution>

        <munit:validation>
            <db:select config-ref="ORACLE_CONFIG_XA_UNSTABLE">
                <db:sql>SELECT COUNT(*) as theCount from TestDdl</db:sql>
            </db:select>
            <munit-tools:assert-equals
                    actual="#[payload.theCount[0]]"
                    expected="#[0]"
                    message="Should have NO records"/>
            <flow-ref name="deleteTableOracle"/>
        </munit:validation>
    </munit:test>

    <flow name="oracle-executeDdlXA">
        <db:execute-ddl config-ref="ORACLE_CONFIG_XA" queryTimeout="10" queryTimeoutUnit="SECONDS">
            <db:sql>CREATE TABLE TestDdl(NAME VARCHAR(255))</db:sql>
        </db:execute-ddl>
    </flow>

    <flow name="deleteTableOracle">
        <db:delete config-ref="ORACLE_CONFIG_UNSTABLE">
            <db:sql>DELETE FROM TestDdl</db:sql>
        </db:delete>
    </flow>

    <flow name="oracle-executeInsertXAUnstable">
        <db:insert config-ref="ORACLE_CONFIG_XA_UNSTABLE">
            <db:sql>INSERT INTO TestDdl(Name) VALUES (:aName)</db:sql>
            <db:input-parameters><![CDATA[#[{
	aName: "test1"
}]]]></db:input-parameters>
        </db:insert>
    </flow>


</mule>